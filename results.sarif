{
	"runs": [
		{
			"results": [
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/storage/index/hash_optimized_arm64.go"
								},
								"region": {
									"endColumn": 38,
									"endLine": 136,
									"snippet": {
										"text": "hash = hash*31 + uint64(b) + uint64(i)"
									},
									"sourceLanguage": "go",
									"startColumn": 38,
									"startLine": 136
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/storage/index/hash.go"
								},
								"region": {
									"endColumn": 39,
									"endLine": 135,
									"snippet": {
										"text": "hash = hash*31 + uint64(b) + uint64(i)"
									},
									"sourceLanguage": "go",
									"startColumn": 39,
									"startLine": 135
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/storage/index/dynamic.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 55,
									"snippet": {
										"text": "return uint64(targetSize)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 55
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/monitoring/metrics/metrics.go"
								},
								"region": {
									"endColumn": 16,
									"endLine": 265,
									"snippet": {
										"text": "Count: uint64(rb.count),"
									},
									"sourceLanguage": "go",
									"startColumn": 16,
									"startLine": 265
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 22,
									"endLine": 72,
									"snippet": {
										"text": "totalSize += uint64(len(key) + valueLen + 8) // key_len + value_len + key + value"
									},
									"sourceLanguage": "go",
									"startColumn": 22,
									"startLine": 72
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/db.go"
								},
								"region": {
									"endColumn": 37,
									"endLine": 565,
									"snippet": {
										"text": "d.metrics.SetActiveSnapshots(uint64(d.epochs.ActiveCount()))"
									},
									"sourceLanguage": "go",
									"startColumn": 37,
									"startLine": 565
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/db.go"
								},
								"region": {
									"endColumn": 37,
									"endLine": 558,
									"snippet": {
										"text": "d.metrics.SetActiveSnapshots(uint64(d.epochs.ActiveCount()))"
									},
									"sourceLanguage": "go",
									"startColumn": 37,
									"startLine": 558
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint64"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 21,
									"endLine": 102,
									"snippet": {
										"text": "valueLen := uint32(len(valueBytes))"
									},
									"sourceLanguage": "go",
									"startColumn": 21,
									"startLine": 102
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 19,
									"endLine": 90,
									"snippet": {
										"text": "keyLen := uint32(len(entry.key))"
									},
									"sourceLanguage": "go",
									"startColumn": 19,
									"startLine": 90
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e uint32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "examples/enhanced_metrics_demo.go"
								},
								"region": {
									"endColumn": 35,
									"endLine": 35,
									"snippet": {
										"text": "putLatency := time.Duration(100+rand.Intn(900)) * time.Microsecond"
									},
									"sourceLanguage": "go",
									"startColumn": 35,
									"startLine": 35
								}
							}
						}
					],
					"message": {
						"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
					},
					"ruleId": "G404"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "examples/enhanced_metrics_demo.go"
								},
								"region": {
									"endColumn": 34,
									"endLine": 34,
									"snippet": {
										"text": "getLatency := time.Duration(50+rand.Intn(450)) * time.Microsecond"
									},
									"sourceLanguage": "go",
									"startColumn": 34,
									"startLine": 34
								}
							}
						}
					],
					"message": {
						"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
					},
					"ruleId": "G404"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 324,
									"snippet": {
										"text": "file, err := os.Open(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 324
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 274,
									"snippet": {
										"text": "file, err := os.Create(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 274
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 221,
									"snippet": {
										"text": "file, err := os.Open(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 221
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 179,
									"snippet": {
										"text": "file, err := os.Create(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 179
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 123,
									"snippet": {
										"text": "file, err := os.Open(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 123
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/export.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 37,
									"snippet": {
										"text": "file, err := os.Create(filename)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 37
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/storage/index/hash_optimized_arm64.go"
								},
								"region": {
									"endColumn": 21,
									"endLine": 97,
									"snippet": {
										"text": "vb := *(*uint64)(unsafe.Pointer(\u0026b[i]))"
									},
									"sourceLanguage": "go",
									"startColumn": 21,
									"startLine": 97
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/storage/index/hash_optimized_arm64.go"
								},
								"region": {
									"endColumn": 21,
									"endLine": 96,
									"snippet": {
										"text": "va := *(*uint64)(unsafe.Pointer(\u0026a[i]))"
									},
									"sourceLanguage": "go",
									"startColumn": 21,
									"startLine": 96
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/db_optimized.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 123,
									"snippet": {
										"text": "d.Flush()"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 123
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/core/db.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 603,
									"snippet": {
										"text": "d.Flush(ctx)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 603
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 1
				}
			],
			"taxonomies": [
				{
					"downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.4.xml.zip",
					"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
					"informationUri": "https://cwe.mitre.org/data/published/cwe_v4.4.pdf/",
					"isComprehensive": true,
					"language": "en",
					"minimumRequiredLocalizedDataSemanticVersion": "4.4",
					"name": "CWE",
					"organization": "MITRE",
					"releaseDateUtc": "2021-03-15",
					"shortDescription": {
						"text": "The MITRE Common Weakness Enumeration"
					},
					"taxa": [
						{
							"fullDescription": {
								"text": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control."
							},
							"guid": "c71e4fa0-720e-3e82-8b67-b2d44d0c604b",
							"helpUri": "https://cwe.mitre.org/data/definitions/190.html",
							"id": "190",
							"shortDescription": {
								"text": "Integer Overflow or Wraparound"
							}
						},
						{
							"fullDescription": {
								"text": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
							},
							"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
							"helpUri": "https://cwe.mitre.org/data/definitions/22.html",
							"id": "22",
							"shortDescription": {
								"text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
							}
						},
						{
							"fullDescription": {
								"text": "The program calls a function that can never be guaranteed to work safely."
							},
							"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
							"helpUri": "https://cwe.mitre.org/data/definitions/242.html",
							"id": "242",
							"shortDescription": {
								"text": "Use of Inherently Dangerous Function"
							}
						},
						{
							"fullDescription": {
								"text": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong."
							},
							"guid": "0512047f-75a2-3ac3-bb28-97df3a80efbe",
							"helpUri": "https://cwe.mitre.org/data/definitions/338.html",
							"id": "338",
							"shortDescription": {
								"text": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
							},
							"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
							"helpUri": "https://cwe.mitre.org/data/definitions/703.html",
							"id": "703",
							"shortDescription": {
								"text": "Improper Check or Handling of Exceptional Conditions"
							}
						}
					],
					"version": "4.4"
				}
			],
			"tool": {
				"driver": {
					"guid": "8b518d5f-906d-39f9-894b-d327b1a421c5",
					"informationUri": "https://github.com/securego/gosec/",
					"name": "gosec",
					"rules": [
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Use of unsafe calls should be audited"
							},
							"help": {
								"text": "Use of unsafe calls should be audited\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G103",
							"name": "Use of Inherently Dangerous Function",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
										"id": "242",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of unsafe calls should be audited"
							}
						},
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Errors unhandled"
							},
							"help": {
								"text": "Errors unhandled\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G104",
							"name": "Improper Check or Handling of Exceptional Conditions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
										"id": "703",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Errors unhandled"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential file inclusion via variable"
							},
							"help": {
								"text": "Potential file inclusion via variable\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G304",
							"name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
										"id": "22",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential file inclusion via variable"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
							},
							"help": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)\nSeverity: HIGH\nConfidence: MEDIUM\n"
							},
							"id": "G404",
							"name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
							"properties": {
								"precision": "medium",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "0512047f-75a2-3ac3-bb28-97df3a80efbe",
										"id": "338",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "integer overflow conversion int -\u003e uint64"
							},
							"help": {
								"text": "integer overflow conversion int -\u003e uint64\nSeverity: HIGH\nConfidence: MEDIUM\n"
							},
							"id": "G115",
							"name": "Integer Overflow or Wraparound",
							"properties": {
								"precision": "medium",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "c71e4fa0-720e-3e82-8b67-b2d44d0c604b",
										"id": "190",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "integer overflow conversion int -\u003e uint64"
							}
						}
					],
					"semanticVersion": "dev",
					"supportedTaxonomies": [
						{
							"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
							"name": "CWE"
						}
					],
					"version": "dev"
				}
			}
		}
	],
	"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
	"version": "2.1.0"
}