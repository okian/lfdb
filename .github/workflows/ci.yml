# Licensed under the MIT License. See LICENSE file in the project root for details.

name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.6' ]
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -race -v -p=1 ./...

      - name: Run tests with coverage
        run: |
          go test -race -v -coverprofile=coverage.out -covermode=atomic -p=1 ./...
          go tool cover -func=coverage.out
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run benchmarks
        run: go test -race -bench=. -benchmem -p=1 ./...

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Install gosec
        run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

      - name: Run gosec security scanner
        run: gosec -fmt sarif -out results.sarif ./...

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Build binaries
        run: |
          go build -o bin/lfdb ./lfdb.go
          go build -o bin/bench ./cmd/bench
          go build -o bin/repl ./cmd/repl

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: bin/

  fuzz:
    name: Fuzz Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run fuzz tests
        run: |
          go test -fuzz=FuzzBasicOperations -fuzztime=30s ./tests/...
          go test -fuzz=FuzzConcurrentOperations -fuzztime=30s ./tests/...
          go test -fuzz=FuzzSnapshotOperations -fuzztime=30s ./tests/...
          go test -fuzz=FuzzTransactionOperations -fuzztime=30s ./tests/...
          go test -fuzz=FuzzRandomSequence -fuzztime=30s ./tests/...
          go test -fuzz=FuzzEpochReclamation -fuzztime=30s ./tests/...

  property:
    name: Property-Based Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run property-based tests
        run: go test -v -run TestPropertyBased ./...

  linearizability:
    name: Linearizability Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run linearizability tests
        run: go test -v -run TestLinearizability ./...

  race-detection:
    name: Race Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run race detection tests
        run: go test -race -v -run TestRaceDetection ./...

  gc:
    name: Garbage Collection Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run GC tests
        run: go test -v -run TestGC ./...

  throughput:
    name: Throughput Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run throughput tests
        run: |
          chmod +x ./scripts/run_throughput_tests.sh
          ./scripts/run_throughput_tests.sh basic
